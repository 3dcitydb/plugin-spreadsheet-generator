import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'distribution'
}

group 'org.citydb.plugins'
version '4.0.0'

apply from: 'properties.gradle'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    compileJava {
        options.release = 8
    }
}

repositories {
    maven {
        url 'https://repo.osgeo.org/repository/release'
    }
    maven {
        url 'https://citydb.jfrog.io/artifactory/maven'
    }
    mavenCentral()
}

dependencies {
    implementation 'org.citydb:impexp-client-gui:5.0.0-SNAPSHOT'
    implementation 'org.apache.poi:poi:4.1.2'
    implementation 'org.apache.poi:poi-ooxml:4.1.2'
    implementation 'org.apache.poi:poi-ooxml-schemas:4.1.2'
    implementation 'net.sourceforge.javacsv:javacsv:2.0'
}

processResources {
    filesMatching('**/plugin.xml') {
        filteringCharset = 'UTF-8'
        filter(ReplaceTokens, tokens: [
                name: project.pluginShortName,
                version: project.version,
                url: project.pluginUrl,
                vendor: project.citydbProject,
                vendorUrl: project.citydbWebsiteUrl,
                citydbName: project.citydbName,
                webMapClientName: project.webMapClientName,
                webMapClientUrl: project.webMapClientUrl,
                docUrl: project.docUrl
        ])
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
    into('META-INF') {
        from 'resources/license/APACHE-2.0.txt'
        from 'resources/license/LICENSE.txt'
    }
}

distributions.main.contents {
    from jar
    from('resources/doc/README.txt') {
        filteringCharset = 'UTF-8'
        filter(ReplaceTokens, tokens: [
                pluginName: project.pluginName,
                pluginShortName: project.pluginShortName,
                version: project.version,
                date: project.date.format('yyyy-MM-dd'),
                impexpName: project.impexpName,
                impexpVersion: project.impexpVersion,
                pkgName: "$project.name-$project.version".toString(),
                zipName: "$project.name-$project.version".toString() + '.zip',
                citydbName: project.citydbName,
                citydbWebsiteUrl: project.citydbWebsiteUrl,
                citydbVcsUrl: project.citydbVcsUrl,
                pluginUrl: project.pluginUrl,
                vendorName: project.vendorName,
                vendorOrganisation: project.vendorOrganisation,
                vendorCountry: project.vendorCountry,
                vendorCopyright: project.vendorCopyright,
                vendorWebsiteUrl: project.vendorWebsiteUrl
        ])
    }
    into('lib') {
        from configurations.runtimeClasspath.copyRecursive().exclude(group: 'org.citydb')
    }
    into('templates') {
        from 'resources/templates'
    }
    into('license') {
        from 'resources/license/APACHE-2.0.txt'
        from 'resources/license/LICENSE.txt'
    }
}